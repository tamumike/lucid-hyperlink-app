define(["require","exports","@dojo/framework/shim/AbortController","../Error","../promiseUtils","./utils"],function(e,t,_,c,b,d){function f(e,t){e.delete(t)}function h(e){void 0===e&&(e="Invocation cancellation");var t=new c("AbortError",e);return t.dojoType="cancel",t}var o=d.MessageType.CLOSE,p=d.MessageType.ABORT,l=d.MessageType.INVOKE,v=d.MessageType.RESPONSE,i=d.MessageType.OPEN_PORT,n=function(){function e(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}return e.prototype.push=function(e){e.type===d.MessageType.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))},e.prototype.clear=function(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null},e.prototype._process=function(){this._timer=null;for(var e=0,t=this._invokeMessages;e<t.length;e++){var o=t[e];this._cancelledJobIds.has(o.jobId)||this._invoke(o)}this._cancelledJobIds.clear(),this._invokeMessages.length=0},e}();return function(){function s(e,t,o){var s=this;this._outJobs=new Map,this._inJobs=new Map,this._queue=new n(function(e){return s._onInvoke(e)}),this._onMessage=this._onMessage.bind(this),this._client=t,this._port=e,this._port.addEventListener("message",this._onMessage),this._port.start(),this._channel=o}return s.connect=function(e){var t,o=new MessageChannel;return(t="function"==typeof e?new e:"default"in e&&"function"==typeof e.default?new e.default:e).remoteClient=new s(o.port1,t,o),o.port2},s.prototype.close=function(){this._post({type:o}),this._close()},s.prototype.isBusy=function(){return 0<this._outJobs.size},s.prototype.invoke=function(s,n,e){var r=this,t=e&&e.signal,i=e&&e.transferList;if(!this._port)return b.reject(new c("remote-client:port-closed","Can't invoke(), port is closed"));if(t&&t.aborted)return b.reject(h());var a=d.newJobId(),o=function(){t&&t.removeEventListener("abort",o);var e=r._outJobs.get(a);e&&(f(r._outJobs,a),r._post({type:p,jobId:a}),e.reject(h()))};return t&&t.addEventListener("abort",o),b.create(function(e,t){var o={resolve:e,reject:t};r._outJobs.set(a,o),r._post({type:l,jobId:a,methodName:s,abortable:!0},n,i)},o)},s.prototype.openPort=function(){var s=this,n=d.newJobId(),r=function(){f(s._outJobs,n),s._post({type:p,jobId:n})};return b.create(function(e,t){var o={resolve:e,reject:t,signal:r};s._outJobs.set(n,o),s._post({type:i,jobId:n})},r)},s.prototype._close=function(){this._channel&&(this._channel=null),this._port.removeEventListener("message",this._onMessage),this._port.close(),this._outJobs.forEach(function(e){e.reject(h())}),this._inJobs.clear(),this._outJobs.clear(),this._queue.clear(),this._port=this._client=null},s.prototype._onMessage=function(e){var t=d.receiveMessage(e);if(t)switch(t.type){case v:this._onResponse(t);break;case l:this._queue.push(t);break;case p:this._onAbort(t);break;case o:this._close();break;case i:this._onOpenPort(t)}},s.prototype._onAbort=function(e){var t=this._inJobs,o=e.jobId,s=t.get(o);this._queue.push(e),s&&(s.controller&&s.controller.abort(),f(t,o))},s.prototype._onInvoke=function(e){var t,o=this,s=e.methodName,n=e.jobId,r=e.data,i=e.abortable?new _.default:null,a=this._inJobs,c=this._client,h=c[s];try{if(!h&&s&&-1!==s.indexOf("."))for(var p=s.split("."),l=0;l<p.length-1;l++)h=(c=c[p[l]])[p[l+1]];if("function"!=typeof h)throw new TypeError(s+" is not a function");t=h.call(c,r,{client:this,signal:i?i.signal:null})}catch(e){return void this._post({type:v,jobId:n,error:d.toInvokeError(e)})}if(b.isThenable(t)){a.set(n,{controller:i,promise:t});var u=function(){a.has(n)&&(i.signal.removeEventListener("abort",u),t.cancel(),f(a,n))};i.signal.addEventListener("abort",u),t.then(function(e){a.has(n)&&(f(a,n),o._post({type:v,jobId:n},e))}).catch(function(e){a.has(n)&&(i.signal.removeEventListener("abort",u),f(a,n),e&&"AbortError"===e.name||o._post({type:v,jobId:n,error:d.toInvokeError(e||{message:"Error encountered at method "+s})}))})}else this._post({type:v,jobId:n},t)},s.prototype._onOpenPort=function(e){var t=new MessageChannel;new s(t.port1,this._client),this._post({type:v,jobId:e.jobId},t.port2,[t.port2])},s.prototype._onResponse=function(e){var t=e.jobId,o=e.error,s=e.data,n=this._outJobs;if(n.has(t)){var r=n.get(t);f(n,t),o?r.reject(c.fromJSON(JSON.parse(o))):r.resolve(s)}},s.prototype._post=function(e,t,o){return d.postMessage(this._port,e,t,o)},s}()});